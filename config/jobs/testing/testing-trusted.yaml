presets:

- labels:
    preset-deployer-github-token: "true"
  env:
  - name: GITHUB_USER
    value: jetstack-bot
  - name: GITHUB_TOKEN_FILE
    value: /etc/github/token
  volumeMounts:
  - name: github-token
    mountPath: /etc/github
  volumes:
  - name: github-token
    secret:
      secretName: bot-github-token

- labels:
    preset-deployer-ssh-key: "true"
  volumeMounts:
  - name: ssh
    mountPath: /root/.ssh
  volumes:
  - name: ssh
    secret:
      secretName: jetstack-bot-ssh-keys
      defaultMode: 0400

- labels:
    preset-deployer-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /creds/service-account.json
  volumeMounts:
    - name: creds
      mountPath: /creds
  volumes:
  - name: creds
    secret:
      secretName: deployer-service-account

postsubmits:
  jetstack/testing:

  # TestGrid (https://github.com/GoogleCloudPlatform/testgrid) is a UI
  # for Prow. We and some other kubernetes-related projects use a hosted TestGrid
  # instance at https://testgrid.k8s.io/. We have a ProwJob that generates
  # TestGrid configuration on ProwJob config changes and pushes it to the
  # jetstack-testgrid GCS bucket. TestGrid reads it from this bucket via [Config
  # Merger](https://github.com/GoogleCloudPlatform/testgrid/tree/master/cmd/config_merge)
  #
  # See https://github.com/kubernetes/test-infra/blob/master/testgrid/merging.md
  - name: post-testing-upload-testgrid-config
    cluster: trusted
    run_if_changed: '^(config/jobs/.*\.yaml)|(config/testgrid/dashboards\.yaml)$'
    decorate: true
    branches:
    - master
    annotations:
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
    max_concurrency: 1
    spec:
      serviceAccountName: testgrid-updater
      containers:
      - image: gcr.io/k8s-prow/configurator:v20220501-de638098ae
        command:
        - configurator
        args:
        - --yaml=config/testgrid/dashboards.yaml
        - --default=config/testgrid/default.yaml
        - --prow-config=config/config.yaml
        - --prow-job-config=config/jobs
        - --prowjob-url-prefix=https://github.com/jetstack/testing/tree/master/config/jobs
        - --update-description
        - --output=gs://jetstack-testgrid/config
        - --oneshot
        resources:
          requests:
            memory: "1Gi"

  - name: post-testing-push-bazelbuild
    cluster: trusted
    run_if_changed: '^images/bazelbuild/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'bazelbuild' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230406-21e4086-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/bazelbuild
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-make-dind
    cluster: trusted
    run_if_changed: '^images/make-dind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'make-dind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230406-21e4086-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/make-dind
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-golang-dind
    cluster: trusted
    run_if_changed: '^images/golang-dind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'golang-dind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230406-21e4086-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/golang-dind
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-image-builder
    cluster: trusted
    run_if_changed: '^images/image-builder/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'image-builder' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230406-21e4086-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/image-builder
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-golang-nodejs
    cluster: trusted
    run_if_changed: '^images/golang-nodejs/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'golang-nodejs' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230406-21e4086-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/golang-nodejs
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-kind
    cluster: trusted
    run_if_changed: '^images/kind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      # Mount GCP SA creds and export GOOGLE_APPLICATION_CREDENTIALS env var
      # pointing to the creds file.
      preset-deployer-service-account: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'kind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/golang-dind@sha256:ac1c44a3bb2781258e570a9e2ec25b3a8464a8112f46703b1769510940612344
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/kind/build.sh
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: aws-testing
    cluster: trusted
    run_if_changed: '^images/golang-aws/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      description: Build and push the 'golang-aws' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230406-21e4086-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/golang-aws
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-nix-dind
    cluster: trusted
    run_if_changed: '^images/nix-dind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'nix-dind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230406-21e4086-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/nix-dind
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
