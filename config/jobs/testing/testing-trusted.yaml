presets:

- labels:
    preset-deployer-github-token: "true"
  env:
  - name: GITHUB_USER
    value: jetstack-bot
  - name: GITHUB_TOKEN_FILE
    value: /etc/github/token
  volumeMounts:
  - name: github-token
    mountPath: /etc/github
  volumes:
  - name: github-token
    secret:
      secretName: bot-github-token

- labels:
    preset-deployer-ssh-key: "true"
  volumeMounts:
  - name: ssh
    mountPath: /root/.ssh
  volumes:
  - name: ssh
    secret:
      secretName: jetstack-bot-ssh-keys
      defaultMode: 0400

- labels:
    preset-deployer-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /creds/service-account.json
  volumeMounts:
    - name: creds
      mountPath: /creds
  volumes:
  - name: creds
    secret:
      secretName: deployer-service-account

- labels:
    preset-image-deploy: "true"
  volumeMounts:
  - mountPath: /lib/modules
    name: modules
    readOnly: true
  - mountPath: /sys/fs/cgroup
    name: cgroup
  volumes:
  - name: modules
    hostPath:
      path: /lib/modules
      type: Directory
  - name: cgroup
    hostPath:
      path: /sys/fs/cgroup
      type: Directory

postsubmits:
  jetstack/testing:

  - name: post-testing-push-bazelbuild
    cluster: trusted
    run_if_changed: '^images/bazelbuild/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-image-deploy: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20190708-96f6b4d-0.24.1
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/builder/ci-runner.sh
        - images/bazelbuild
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-golang-dind
    cluster: trusted
    run_if_changed: '^images/golang-dind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-image-deploy: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20190708-96f6b4d-0.24.1
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/builder/ci-runner.sh
        - images/golang-dind
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-katacoda-lint
    cluster: trusted
    run_if_changed: '^images/katacoda-lint/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-image-deploy: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20190708-96f6b4d-0.24.1
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/builder/ci-runner.sh
        - images/katacoda-lint
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-tarmak-ruby
    cluster: trusted
    run_if_changed: '^images/tarmak/ruby/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-image-deploy: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20190708-96f6b4d-0.24.1
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/builder/ci-runner.sh
        - images/tarmak/ruby
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-tarmak-sphinx-docs
    cluster: trusted
    run_if_changed: '^images/tarmak/sphinx-docs/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-image-deploy: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20190708-96f6b4d-0.24.1
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/builder/ci-runner.sh
        - images/tarmak/sphinx-docs
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-terraform-google-gke-cluster
    cluster: trusted
    run_if_changed: '^images/terraform-google-gke-cluster/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-image-deploy: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20190708-96f6b4d-0.24.1
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/builder/ci-runner.sh
        - images/terraform-google-gke-cluster
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
