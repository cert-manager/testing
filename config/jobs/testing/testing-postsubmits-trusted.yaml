postsubmits:
  jetstack/testing:

  # TestGrid (https://github.com/GoogleCloudPlatform/testgrid) is a UI
  # for Prow. We and some other kubernetes-related projects use a hosted TestGrid
  # instance at https://testgrid.k8s.io/. We have a ProwJob that generates
  # TestGrid configuration on ProwJob config changes and pushes it to the
  # jetstack-testgrid GCS bucket. TestGrid reads it from this bucket via [Config
  # Merger](https://github.com/GoogleCloudPlatform/testgrid/tree/master/cmd/config_merge)
  #
  # See https://github.com/kubernetes/test-infra/blob/master/testgrid/merging.md
  - name: post-testing-upload-testgrid-config
    cluster: trusted
    run_if_changed: '^(config/jobs/.*\.yaml)|(config/testgrid/dashboards\.yaml)$'
    decorate: true
    branches:
    - master
    annotations:
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
    max_concurrency: 1
    spec:
      serviceAccountName: testgrid-updater
      containers:
      - image: gcr.io/k8s-prow/configurator:v20230411-7b4f9b177a
        command:
        - configurator
        args:
        - --yaml=config/testgrid/dashboards.yaml
        - --default=config/testgrid/default.yaml
        - --prow-config=config/config.yaml
        - --prow-job-config=config/jobs
        - --prowjob-url-prefix=https://github.com/jetstack/testing/tree/master/config/jobs
        - --update-description
        - --output=gs://jetstack-testgrid/config
        - --oneshot
        resources:
          requests:
            memory: "1Gi"

  - name: post-testing-reconcile-hmacs
    cluster: trusted
    run_if_changed: 'config/config.yaml'
    decorate: true
    branches:
    - master
    annotations:
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
    labels:
      preset-deployer-github-token: "true"
    max_concurrency: 1
    spec:
      containers:
      - image: gcr.io/k8s-prow/hmac:v20200622-168a90f1b0
        command:
        - /hmac
        args:
        - --config-path=config/config.yaml
        - --hook-url=https://prow.build-infra.jetstack.net/hook
        - --hmac-token-secret-name=hmac-token-new
        - --hmac-token-key=hmac
        - --kubeconfig=/etc/kubeconfig/config
        - --kubeconfig-context=prow-services
        - --github-token-path=/etc/github/token
        - --github-endpoint=https://api.github.com
        - --dry-run=true # set this to false once configured correctly
        volumeMounts:
        - name: kubeconfig
          mountPath: /etc/kubeconfig
          readOnly: true
      volumes:
      - name: kubeconfig
        secret:
          defaultMode: 420
          secretName: kubeconfig-prow-services

  - name: post-testing-push-bazelbuild
    cluster: trusted
    run_if_changed: '^images/bazelbuild/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'bazelbuild' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230411-caf0621-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/bazelbuild
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-make-dind
    cluster: trusted
    run_if_changed: '^images/make-dind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'make-dind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230411-caf0621-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/make-dind
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-golang-dind
    cluster: trusted
    run_if_changed: '^images/golang-dind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'golang-dind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230411-caf0621-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/golang-dind
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-image-builder
    cluster: trusted
    run_if_changed: '^images/image-builder/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'image-builder' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230411-caf0621-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/image-builder
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-golang-nodejs
    cluster: trusted
    run_if_changed: '^images/golang-nodejs/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'golang-nodejs' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230411-caf0621-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/golang-nodejs
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-kind
    cluster: trusted
    run_if_changed: '^images/kind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      # Mount GCP SA creds and export GOOGLE_APPLICATION_CREDENTIALS env var
      # pointing to the creds file.
      preset-deployer-service-account: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'kind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/golang-dind@sha256:ac1c44a3bb2781258e570a9e2ec25b3a8464a8112f46703b1769510940612344
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/kind/build.sh
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: aws-testing
    cluster: trusted
    run_if_changed: '^images/golang-aws/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      description: Build and push the 'golang-aws' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230411-caf0621-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/golang-aws
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]

  - name: post-testing-push-nix-dind
    cluster: trusted
    run_if_changed: '^images/nix-dind/'
    branches:
    - master
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-deployer-service-account: "true"
      preset-deployer-github-token: "true"
      preset-deployer-ssh-key: "true"
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-testing-janitors
      testgrid-alert-email: cert-manager-dev-alerts@googlegroups.com
      testgrid-disable-prowjob-analysis: "true"
      description: Build and push the 'nix-dind' image
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/image-builder:20230411-caf0621-gcloud-425
        args:
        # Wrap the release script with the runner so we can use docker-in-docker
        - runner
        - images/image-builder-script/builder.sh
        - images/nix-dind
        - --confirm=true
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
