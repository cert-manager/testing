presubmits:
  jetstack/katacoda-scenarios:
  - name: pull-katacoda-scenarios-lint
    always_run: true
    skip_report: false
    context: pull-katacoda-scenarios-lint
    max_concurrency: 2
    agent: kubernetes
    decorate: true
    decoration_config:
      ssh_key_secrets:
      - jetstack-pulling-bot
    clone_uri: "git@github.com:jetstack/katacoda-scenarios.git"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/katacoda-lint:20190409-7fe5df9
        args:
        - ./hack/lint.sh
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test lint,?(\\s+|$)"
    rerun_command: "/test lint"
  - name: pull-katacoda-scenarios-bazel
    always_run: true
    context: pull-katacoda-scenarios-bazel
    max_concurrency: 2
    agent: kubernetes
    decorate: true
    decoration_config:
      ssh_key_secrets:
      - jetstack-pulling-bot
    clone_uri: "git@github.com:jetstack/katacoda-scenarios.git"
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20190409-72e658d-0.21.0
        args:
        - runner
        - bazel
        - test
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    trigger: "(?m)^/test verify,?(\\s+|$)"
    rerun_command: "/test verify"
