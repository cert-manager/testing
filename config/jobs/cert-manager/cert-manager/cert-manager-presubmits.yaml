presubmits:
  cert-manager/cert-manager:

  # Why do we have only have presubmits on "master" but not on the
  # to-be-released branch, e.g. "release-1.9"? Because we don't need to be
  # testing e.g. release-1.9 before we have made the first alpha release, e.g.,
  # "1.9.0-alpha.0". See Step 13.3 in
  # https://cert-manager.io/docs/contributing/release-process/

  - name: pull-cert-manager-bazel
    always_run: true
    context: pull-cert-manager-bazel
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs 'bazel test --jobs=1 //...'
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - bazel
        - test
        - --jobs=1
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-make-test
    context: pull-cert-manager-make-test
    always_run: true
    optional: false
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs unit tests and verification scripts
    labels:
      preset-service-account: "true"
    spec:
      containers:
        # TODO: change to a custom image that embeds the system tools we
        # need (jq, make, bash, Go, etc) but without Bazel. Tracked at
        # https://github.com/cert-manager/cert-manager/issues/4939.
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - bash
        - -c
        - |
          apt-get install jq -y >/dev/null
          make -j vendor-go ci-presubmit test-ci
        resources:
          requests:
            cpu: 2
            memory: 4Gi
        volumeMounts:
        - mountPath: /root/.cache/go-build
          name: gocache
        - mountPath: /home/prow/go/pkg/mod
          name: gopkgmod
        - mountPath: /home/prow/go/src/github.com/cert-manager/cert-manager/bin/downloaded
          name: bindownloaded
      volumes:
      - name: gocache
        hostPath:
          path: /tmp/gocache
          type: DirectoryOrCreate
      - name: gopkgmod
        hostPath:
          path: /tmp/gopkgmod
          type: DirectoryOrCreate
      - name: bindownloaded
        hostPath:
          path: /tmp/bindownloaded
          type: DirectoryOrCreate
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-bazel-nocache
    description: Run cert-manager unit tests with Bazel remote-caching disabled
    always_run: false
    optional: true
    context: pull-cert-manager-bazel-nocache
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs 'bazel test --jobs=1 //...'
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - bazel
        - test
        - --jobs=1
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-bazel-gocache
    description: Run cert-manager unit tests with Bazel using a Go cache on the local node
    always_run: false
    optional: true
    context: pull-cert-manager-bazel-gocache
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'false'
      description: Runs 'bazel test --jobs=1 //...'
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-go-cache: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - bazel
        - test
        - --jobs=1
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-bazel-experimental
    always_run: false
    optional: true
    context: pull-cert-manager-bazel-experimental
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs 'bazel test --jobs=1 //...' using the 'experimental' Bazel version
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-experimental
        args:
        - runner
        - bazel
        - test
        - --jobs=1
        - //...
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  # Helm chart verification currently requires Docker.
  # We maintain a standalone presubmit for running this.
  # See https://github.com/helm/chart-testing/issues/53
  - name: pull-cert-manager-chart
    always_run: true
    context: pull-cert-manager-chart
    max_concurrency: 8
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Verifies the Helm chart passes linting checks
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - make
        - verify_chart
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-deps
    always_run: true
    context: pull-cert-manager-deps
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Verifies dependency related files are up to date
    labels:
      preset-service-account: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - make
        - verify_deps
        resources:
          requests:
            cpu: 2
            memory: 4Gi
      dnsConfig:
        options:
          - name: ndots
            value: "1"

  - name: pull-cert-manager-e2e-v1-19
    context: pull-cert-manager-e2e-v1-19
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs the end-to-end test suite against a Kubernetes v1.19 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates-disable-ssa: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.19"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-20
    context: pull-cert-manager-e2e-v1-20
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs the end-to-end test suite against a Kubernetes v1.20 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates-disable-ssa: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.20"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-21
    context: pull-cert-manager-e2e-v1-21
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs the end-to-end test suite against a Kubernetes v1.21 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates-disable-ssa: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.21"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-v1-22
    context: pull-cert-manager-e2e-v1-22
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs the end-to-end test suite against a Kubernetes v1.22 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.22"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

    # This is the default e2e test for all PRs.
  - name: pull-cert-manager-e2e-v1-23
    context: pull-cert-manager-e2e-v1-23
    always_run: true
    optional: false
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs the end-to-end test suite against a Kubernetes v1.23 cluster
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.23"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-make-e2e-v1-23
    context: pull-cert-manager-make-e2e-v1-23
    always_run: true
    optional: false
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs 'make e2e-ci K8S_VERSION=1.23'
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
        # TODO: change to a custom image that embeds the system tools we
        # need (jq, make, bash, Go, etc) but without Bazel. Tracked at
        # https://github.com/cert-manager/cert-manager/issues/4939.
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - bash
        - -c
        - |
          apt-get install jq -y >/dev/null
          make -j vendor-go e2e-ci K8S_VERSION=1.23
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /root/.cache/go-build
          name: gocache
        - mountPath: /home/prow/go/pkg/mod
          name: gopkgmod
        - mountPath: /home/prow/go/src/github.com/cert-manager/cert-manager/bin/downloaded
          name: bindownloaded
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: gocache
        hostPath:
          path: /tmp/gocache
          type: DirectoryOrCreate
      - name: gopkgmod
        hostPath:
          path: /tmp/gopkgmod
          type: DirectoryOrCreate
      - name: bindownloaded
        hostPath:
          path: /tmp/bindownloaded
          type: DirectoryOrCreate
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-make-e2e-v1-24
    context: pull-cert-manager-make-e2e-v1-24
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches:
    - master
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: jetstack-cert-manager-presubmits-blocking
      description: Runs 'make e2e-ci K8S_VERSION=1.24'
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-enable-all-feature-gates: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
        # TODO: change to a custom image that embeds the system tools we
        # need (jq, make, bash, Go, etc) but without Bazel. Tracked at
        # https://github.com/cert-manager/cert-manager/issues/4939.
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - bash
        - -c
        - |
          apt-get install jq -y >/dev/null
          make -j vendor-go e2e-ci K8S_VERSION=1.24
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /root/.cache/go-build
          name: gocache
        - mountPath: /home/prow/go/pkg/mod
          name: gopkgmod
        - mountPath: /home/prow/go/src/github.com/cert-manager/cert-manager/bin/downloaded
          name: bindownloaded
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: gocache
        hostPath:
          path: /tmp/gocache
          type: DirectoryOrCreate
      - name: gopkgmod
        hostPath:
          path: /tmp/gopkgmod
          type: DirectoryOrCreate
      - name: bindownloaded
        hostPath:
          path: /tmp/bindownloaded
          type: DirectoryOrCreate
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  # Verifies upgrade from the latest published release with both Helm chart and
  # static manifests.
  - name: pull-cert-manager-upgrade
    # Run always
    always_run: true
    optional: false
    # No more than 4 instances of this job at the same time.
    max_concurrency: 4
    # This job will run on Kubernetes cluster.
    agent: kubernetes
    # Pod utilities will be set up.
    decorate: true
    branches:
    - master
    annotations:
      description: Runs cert-manager upgrade from latest published release
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - make
        - cluster
        - verify_upgrade
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        # Used by https://github.com/cert-manager/cert-manager/blob/master/devel/cluster/create-kind.sh
        - name: K8S_VERSION
          value: "1.23"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  # An E2E test job to allow us to manually trigger the Venafi  TPP E2E tests
  # with the following GitHub comment:
  #
  #  /test pull-cert-manager-issuers-venafi-tpp
  #
  # See https://github.com/cert-manager/cert-manager/issues/3555
  #
  - name: pull-cert-manager-issuers-venafi-tpp
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches: []
    annotations:
      description: Runs the E2E tests with 'Venafi TPP' in name
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-venafi-tpp-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-ginkgo-focus-venafi-tpp: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.23"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  # An E2E test job to allow us to manually trigger the Venafi Cloud E2E tests
  # with the following GitHub comment:
  #
  #  /test pull-cert-manager-issuers-venafi-cloud
  #
  # The regular presubmit jobs do not run Venafi e2e tests.
  #
  - name: pull-cert-manager-e2e-issuers-venafi-cloud
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches: []
    annotations:
      description: Runs the E2E tests with 'Venafi Cloud' in name
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-venafi-cloud-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-ginkgo-focus-venafi-cloud: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.23"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"

  - name: pull-cert-manager-e2e-feature-gates-disabled
    always_run: false
    optional: true
    max_concurrency: 4
    agent: kubernetes
    decorate: true
    branches: []
    annotations:
      description: Runs the E2E tests with all feature gates disabled
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
      preset-disable-all-alpha-beta-feature-gates: "true"
      preset-cloudflare-credentials: "true"
      preset-retry-flakey-tests: "true"
      preset-ginkgo-skip-default: "true"
    spec:
      containers:
      - image: eu.gcr.io/jetstack-build-infra-images/bazelbuild:20220512-b6ea825-4.2.1
        args:
        - runner
        - devel/ci-run-e2e.sh
        resources:
          requests:
            cpu: 3500m
            memory: 12Gi
        env:
        - name: K8S_VERSION
          value: "1.23"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      dnsConfig:
        options:
        - name: ndots
          value: "1"
